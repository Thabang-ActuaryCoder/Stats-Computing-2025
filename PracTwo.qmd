---
title: "Statistical Computing with R"
# subtitle: "Day Two : Projects in R"
subtitle: "Part 2: Practical Two"
author: "Baloyi Thabang Bongani Junior "
institute: "Department of Statistical Sciences, University of Cape Town"
date:  "`r format(Sys.time(), '%d %B %Y')`"
format: revealjs
editor: visual
css: style.css
title-slide-attributes: 
  data-background-image: statslogo.png, UCTCrest.jpeg
  data-background-size: 15%, 15%
  data-background-position: 0% 95%, 95% 95%

execute: 
  echo: true
  eval: true
  warning: false
  message: false
---

```{r,include=FALSE}

# =========================
# Clear the environment
# =========================

rm(list = ls(all= TRUE))

```

```{r, include=FALSE}

# =========================
# Load Packages
# =========================

library(knitr)
```

## 1. **Generate Simulated Data:**

```{r}
set.seed(1)

n <- 100          # Number of Observations 
x <- seq(from=1, to =100, length = n)

err <- rnorm(n,mean = 0, sd = 0.2)

y <- sin(x/10) + err

plot(y~ x)
```

## 2. Implement the LOWESS Algorithm:

```{r}

customLowess <- function(x, y, f) {
  n <- length(x)
  k <- max(ceiling(f * n), 1)  # Ensure at least 1 neighbor
  smoothed <- numeric(n)
  
  for (i in 1:n) {
    distances <- abs(x - x[i])
    neighbors <- order(distances)[1:k]
    d_max <- max(distances[neighbors])
    
    if (d_max == 0) {
      weights <- rep(1, k)
    } else {
      
      weights <- (1 - (distances[neighbors] / d_max)^3)^3
      
    }
    
    X <- cbind(1, x[neighbors])
    W <- diag(weights)
    y_neighbors <- y[neighbors]
    
    XtWX <- t(X) %*% W %*% X
    XtWy <- t(X) %*% W %*% y_neighbors
    
    beta <- solve(XtWX, XtWy)
    smoothed[i] <- beta[1] + beta[2] * x[i]
  }
  
  return(smoothed)
}


```

## 3. **Compare with Râ€™s Built-in `lowess():`**

```{r}

f <- 0.05
smoothed_custom <- customLowess(x, y, f)
smoothed_builtin <- lowess(x, y, f = f, iter = 0)$y

# Plot Results
plot(x, y, col = "gray", main = "LOWESS Smoothing Comparison")
lines(x, smoothed_custom, col = "red", lwd = 2)
lines(x, smoothed_builtin, col = "blue", lwd = 2, lty = 2)
legend("bottomleft", legend = c("Custom LOWESS", "Built-in LOWESS"),
       col = c("red", "blue"), lty = 1:2, lwd = 2)
```
